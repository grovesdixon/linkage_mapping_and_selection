x
trace.boot = function(lgs, dat, chrom.ds, grab.size, overlap.portion){
means = c()
positions = c()
for (lg in lgs){
lg.sub = dat[dat$lg == lg,]
windows = seq(1, nrow(lg.sub), by = grab.size*overlap.portion)
for (w in 1 : (length(windows) - 1)){
left = windows[w]
right = windows[(w+1)]
win.sub = lg.sub[left:right,]
means = append(means, mean(abs(win.sub[,chrom.ds])))
positions = append(positions, median(win.sub$cM))
}
}
results = data.frame(means, positions)
colnames(results) = c(chrom.ds, 'cM')
return(results)
}
x = trace.boot(lgs, ac.a.poly, 'AC1dp', 30, 1/3)
x
ac.Ac1.boot = bootstrap.chroms(ITER, 30, ac.a.poly, 'AC1dp')
ac.Ac2.boot = bootstrap.chroms(ITER, 30, ac.a.poly, 'AC2dp')
ac.Cc1.boot = bootstrap.chroms(ITER, 30, ac.a.poly, 'CC1dp')
ac.Cc2.boot = bootstrap.chroms(ITER, 30, ac.a.poly, 'CC2dp')
ITER = 10^3
ac.Ac1.boot = bootstrap.chroms(ITER, 30, ac.a.poly, 'AC1dp')
ac.Ac2.boot = bootstrap.chroms(ITER, 30, ac.a.poly, 'AC2dp')
ac.Cc1.boot = bootstrap.chroms(ITER, 30, ac.a.poly, 'CC1dp')
ac.Cc2.boot = bootstrap.chroms(ITER, 30, ac.a.poly, 'CC2dp')
hist(ac.c1.boot)
hist(ac.Ac1.boot)
head(ac.Ac1.boot)
trace.boot = function(lgs, dat, chrom.ds, grab.size, overlap.portion, boot.dat){
means = c()
positions = c()
boot.pvalues = c()
for (lg in lgs){
lg.sub = dat[dat$lg == lg,]
windows = seq(1, nrow(lg.sub), by = grab.size*overlap.portion)
for (w in 1 : (length(windows) - 1)){
left = windows[w]
right = windows[(w+1)]
win.sub = lg.sub[left:right,]
mn = mean(abs(win.sub[,chrom.ds]))
boot.p = boot.dat[boot.dat >= mn,] / length(boot.dat)
means = append(means, mn)
positions = append(positions, median(win.sub$cM))
boot.pvalues = append(boot.pvalues, boot.p)
}
}
results = data.frame(means, positions, boot.pvalues)
colnames(results) = c(chrom.ds, 'cM', 'boot.pvalues')
return(results)
}
x = trace.boot(lgs, ac.a.poly, 'AC1dp', 30, 1/3)
x = trace.boot(lgs, ac.a.poly, 'AC1dp', 30, 1/3, ac.Ac1.boot)
trace.boot = function(lgs, dat, chrom.ds, grab.size, overlap.portion, boot.dat){
means = c()
positions = c()
boot.pvalues = c()
for (lg in lgs){
lg.sub = dat[dat$lg == lg,]
windows = seq(1, nrow(lg.sub), by = grab.size*overlap.portion)
for (w in 1 : (length(windows) - 1)){
left = windows[w]
right = windows[(w+1)]
win.sub = lg.sub[left:right,]
mn = mean(abs(win.sub[,chrom.ds]))
boot.p = boot.dat[boot.dat >= mn] / length(boot.dat)
means = append(means, mn)
positions = append(positions, median(win.sub$cM))
boot.pvalues = append(boot.pvalues, boot.p)
}
}
results = data.frame(means, positions, boot.pvalues)
colnames(results) = c(chrom.ds, 'cM', 'boot.pvalues')
return(results)
}
x = trace.boot(lgs, ac.a.poly, 'AC1dp', 30, 1/3, ac.Ac1.boot)
trace.boot = function(lgs, dat, chrom.ds, grab.size, overlap.portion, boot.dat){
means = c()
positions = c()
boot.pvalues = c()
for (lg in lgs){
lg.sub = dat[dat$lg == lg,]
windows = seq(1, nrow(lg.sub), by = grab.size*overlap.portion)
for (w in 1 : (length(windows) - 1)){
left = windows[w]
right = windows[(w+1)]
win.sub = lg.sub[left:right,]
mn = mean(abs(win.sub[,chrom.ds]))
boot.p = length(boot.dat[boot.dat >= mn]) / length(boot.dat)
means = append(means, mn)
positions = append(positions, median(win.sub$cM))
boot.pvalues = append(boot.pvalues, boot.p)
}
}
results = data.frame(means, positions, boot.pvalues)
colnames(results) = c(chrom.ds, 'cM', 'boot.pvalues')
return(results)
}
x = trace.boot(lgs, ac.a.poly, 'AC1dp', 30, 1/3, ac.Ac1.boot)
head(x)
x$p = p.adjust(x$boot.pvalues, method = 'BH')
plot(-log(x$p)~x$cM)
x = trace.boot(lgs, ac.a.poly, 'AC1dp', 30, 1/30, ac.Ac1.boot)
x$p = p.adjust(x$boot.pvalues, method = 'BH')
plot(-log(x$p)~x$cM)
x = trace.boot(lgs, ac.a.poly, 'AC1dp', 30, 1/15, ac.Ac1.boot)
x$p = p.adjust(x$boot.pvalues, method = 'BH')
plot(-log(x$p)~x$cM)
x = trace.boot(lgs, ac.a.poly, 'AC1dp', 30, 1/3, ac.Ac1.boot)
x$p = p.adjust(x$boot.pvalues, method = 'BH')
plot(-log(x$p)~x$cM)
x = trace.boot(lgs, ac.a.poly, 'AC2dp', 30, 1/3, ac.Ac1.boot)
x$p = p.adjust(x$boot.pvalues, method = 'BH')
plot(-log(x$p)~x$cM)
x = trace.boot(lgs, ac.a.poly, 'CC2dp', 30, 1/3, ac.Cc1.boot)
x$p = p.adjust(x$boot.pvalues, method = 'BH')
plot(-log(x$p)~x$cM)
ac.Cc1.boot = bootstrap.chroms(ITER, 30, ac.c.poly, 'CC1dp')
ac.Cc2.boot = bootstrap.chroms(ITER, 30, ac.c.poly, 'CC2dp')
hist(ac.Ac1.boot)
x = trace.boot(lgs, ac.a.poly, 'CC2dp', 30, 1/3, ac.Cc1.boot)
x$p = p.adjust(x$boot.pvalues, method = 'BH')
plot(-log(x$p)~x$cM)
abline(v = endpoints)
x = trace.boot(lgs, ac.c.poly, 'CC2dp', 30, 1/3, ac.Cc1.boot)
x$p = p.adjust(x$boot.pvalues, method = 'BH')
plot(-log(x$p)~x$cM)
abline(v = endpoints)
trace.boot = function(lgs, dat, chrom.ds, grab.size, overlap.portion, boot.dat){
means = c()
positions = c()
boot.pvalues = c()
for (lg in lgs){
lg.sub = dat[dat$lg == lg,]
windows = seq(1, nrow(lg.sub), by = grab.size*overlap.portion)
for (w in 1 : (length(windows) - 1)){
left = windows[w]
right = windows[(w+1)]
win.sub = lg.sub[left:right,]
mn = mean(abs(win.sub[,chrom.ds]))
boot.p = length(boot.dat[boot.dat >= mn]) / length(boot.dat) + 1/length(boot.dat)
means = append(means, mn)
positions = append(positions, median(win.sub$cM))
boot.pvalues = append(boot.pvalues, boot.p)
}
}
results = data.frame(means, positions, boot.pvalues)
colnames(results) = c(chrom.ds, 'cM', 'boot.pvalues')
return(results)
}
x = trace.boot(lgs, ac.c.poly, 'CC2dp', 30, 1/3, ac.Cc1.boot)
x$p = p.adjust(x$boot.pvalues, method = 'BH')
plot(-log(x$p)~x$cM)
abline(v = endpoints)
length(ac.Cc1.boot)
x = trace.boot(lgs, ac.c.poly, 'CC2dp', 30, 1/3, ac.Cc1.boot)
x$p = p.adjust(x$boot.pvalues, method = 'BH')
plot(-log(x$p, 10)~x$cM)
abline(v = endpoints)
get.boot = function(lgs, dat, chrom.ds, grab.size, overlap.portion, boot.dat){
means = c()
positions = c()
boot.pvalues = c()
for (lg in lgs){
lg.sub = dat[dat$lg == lg,]
windows = seq(1, nrow(lg.sub), by = grab.size*overlap.portion)
for (w in 1 : (length(windows) - 1)){
left = windows[w]
right = windows[(w+1)]
win.sub = lg.sub[left:right,]
mn = mean(abs(win.sub[,chrom.ds]))
boot.p = length(boot.dat[boot.dat >= mn]) / length(boot.dat) + 1/length(boot.dat)
means = append(means, mn)
positions = append(positions, median(win.sub$cM))
boot.pvalues = append(boot.pvalues, boot.p)
}
}
results = data.frame(means, positions, boot.pvalues)
colnames(results) = c(chrom.ds, 'cM', 'boot.pvalues')
results$p = p.adjust(results$boot.pvalues, method = 'BH')
plot(-log(results$p, 10)~results$cM)
abline(v = endpoints)
return(results)
}
get.boot = function(lgs, dat, chrom.ds, grab.size, overlap.portion, boot.dat){
means = c()
positions = c()
boot.pvalues = c()
for (lg in lgs){
lg.sub = dat[dat$lg == lg,]
windows = seq(1, nrow(lg.sub), by = grab.size*overlap.portion)
for (w in 1 : (length(windows) - 1)){
left = windows[w]
right = windows[(w+1)]
win.sub = lg.sub[left:right,]
mn = mean(abs(win.sub[,chrom.ds]))
boot.p = length(boot.dat[boot.dat >= mn]) / length(boot.dat) + 1/length(boot.dat)
means = append(means, mn)
positions = append(positions, median(win.sub$cM))
boot.pvalues = append(boot.pvalues, boot.p)
}
}
results = data.frame(means, positions, boot.pvalues)
colnames(results) = c(chrom.ds, 'cM', 'boot.pvalues')
results$p = p.adjust(results$boot.pvalues, method = 'BH')
plot(-log(results$p, 10)~results$cM)
abline(v = endpoints)
return(results)
}
ac.Cc1.boot = bootstrap.chroms(ITER, 30, ac.c.poly, 'CC1dp')
get.boot = function(lgs, dat, chrom.ds, grab.size, overlap.portion, boot.dat){
means = c()
positions = c()
boot.pvalues = c()
for (lg in lgs){
lg.sub = dat[dat$lg == lg,]
windows = seq(1, nrow(lg.sub), by = grab.size*overlap.portion)
for (w in 1 : (length(windows) - 1)){
left = windows[w]
right = windows[(w+1)]
win.sub = lg.sub[left:right,]
mn = mean(abs(win.sub[,chrom.ds]))
boot.p = length(boot.dat[boot.dat >= mn]) / length(boot.dat) + 1/length(boot.dat)
means = append(means, mn)
positions = append(positions, median(win.sub$cM))
boot.pvalues = append(boot.pvalues, boot.p)
}
}
results = data.frame(means, positions, boot.pvalues)
colnames(results) = c(chrom.ds, 'cM', 'boot.pvalues')
results$p = p.adjust(results$boot.pvalues, method = 'BH')
plot(-log(results$p, 10)~results$cM)
abline(v = endpoints)
return(results)
}
ac.Cc1.boot = bootstrap.chroms(ITER, 30, ac.c.poly, 'CC1dp')
ITER = 10^3
ac.Ac1.boot = bootstrap.chroms(ITER, 30, ac.a.poly, 'AC1dp')
ac.Ac2.boot = bootstrap.chroms(ITER, 30, ac.a.poly, 'AC2dp')
ac.Cc1.boot = bootstrap.chroms(ITER, 30, ac.c.poly, 'CC1dp')
ac.Cc2.boot = bootstrap.chroms(ITER, 30, ac.c.poly, 'CC2dp')
x = get.boot(lgs, ac.c.poly, 'CC2dp', 30, 1/3, ac.Cc1.boot)
head(ac.control.poly)
con.Ac1.boot = bootstrap.chroms(ITER, 30, ac.control.poly, 'AC1dp')
con.Cc1.boot = bootstrap.chroms(ITER, 30, ca.control.poly, 'CC1dp')
head(ca.control.poly)
con.Cc1.boot = bootstrap.chroms(ITER, 30, ca.control.poly, 'CA1dp')
x = get.boot(lgs, ac.control.poly, 'AC1dp', 30, 1/3, ac.Ac1.boot)
x = get.boot(lgs, ca.control.poly, 'CA1dp', 30, 1/3, ca.Cc1.boot)
con.Cc1.boot = bootstrap.chroms(ITER, 30, ca.control.poly, 'CA1dp')
x = get.boot(lgs, ca.control.poly, 'CA1dp', 30, 1/3, ca.Cc1.boot)
x = get.boot(lgs, ac.control.poly, 'AC1dp', 30, 1/3, con.Ac1.boot)
x = get.boot(lgs, ca.control.poly, 'CA1dp', 30, 1/3, con.Cc1.boot)
x = get.boot(lgs, ac.a.poly, 'AC1dp', 30, 1/10, ac.Ac1.boot)
x = get.boot(lgs, ac.a.poly, 'AC1dp', 30, 1/2, ac.Ac1.boot)
#PLOT FOR THE CONTROLS
quartz()
par(mfrow = c(2,1))
titleM = "AC (control vs control) A Chromosomes"
titleP = "CA (control vs control) C Chromosomes"
plot.chroms(ac.control.poly, 'AC1dp', 'AC2dp', YLIM, titleM, "Linkage Group", YLAB, COLORS, CUT)
plot.chroms(ca.control.poly, 'CA1dp', 'CA2dp', YLIM, titleP, "Linkage Group", YLAB, COLORS, CUT)
con.Ac1.boot = bootstrap.chroms(ITER, 30, ac.control.poly, 'AC1dp')
x = get.boot(lgs, ac.control.poly, 'AC1dp', 30, 1/3, con.Ac1.boot)
x = get.boot(lgs, ca.control.poly, 'CA1dp', 30, 1/3, con.Cc1.boot)
plot.chroms(ac.control.poly, 'AC1dp', 'AC2dp', YLIM, titleM, "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.control.poly, 'AC1dp', 30, 1/3, con.Ac1.boot)
plot.chroms(ca.a.poly, 'AC1dp', 'AC2dp', YLIM, titleP, "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.a.poly, 'AC1dp', 30, 1/2, ac.Ac1.boot)
plot.chroms(ca.a.poly, 'AC1dp', 'AC2dp', YLIM, titleP, "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.a.poly, 'AC1dp', 30, 1/2, ac.Ac1.boot)
head(x)
get.boot = function(lgs, dat, chrom.ds, grab.size, overlap.portion, boot.dat){
means = c()
positions = c()
boot.pvalues = c()
for (lg in lgs){
lg.sub = dat[dat$lg == lg,]
windows = seq(1, nrow(lg.sub), by = grab.size*overlap.portion)
for (w in 1 : (length(windows) - 1)){
left = windows[w]
right = windows[(w+1)]
win.sub = lg.sub[left:right,]
mn = mean(abs(win.sub[,chrom.ds]))
boot.p = length(boot.dat[boot.dat >= mn]) / length(boot.dat) + 1/length(boot.dat)
means = append(means, mn)
positions = append(positions, median(win.sub$cM))
boot.pvalues = append(boot.pvalues, boot.p)
}
}
results = data.frame(means, positions, boot.pvalues)
colnames(results) = c(chrom.ds, 'cM', 'boot.pvalues')
results$p = p.adjust(results$boot.pvalues, method = 'BH')
sig = results[results$p < CUT,]
points(0~sig$cM)
return(results)
}
plot.chroms(ca.a.poly, 'AC1dp', 'AC2dp', YLIM, titleP, "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.a.poly, 'AC1dp', 30, 1/2, ac.Ac1.boot)
head(x)
get.boot = function(lgs, dat, chrom.ds, grab.size, overlap.portion, boot.dat){
means = c()
positions = c()
boot.pvalues = c()
for (lg in lgs){
lg.sub = dat[dat$lg == lg,]
windows = seq(1, nrow(lg.sub), by = grab.size*overlap.portion)
for (w in 1 : (length(windows) - 1)){
left = windows[w]
right = windows[(w+1)]
win.sub = lg.sub[left:right,]
mn = mean(abs(win.sub[,chrom.ds]))
boot.p = length(boot.dat[boot.dat >= mn]) / length(boot.dat) + 1/length(boot.dat)
means = append(means, mn)
positions = append(positions, median(win.sub$cM))
boot.pvalues = append(boot.pvalues, boot.p)
}
}
results = data.frame(means, positions, boot.pvalues)
colnames(results) = c(chrom.ds, 'cM', 'boot.pvalues')
results$p = p.adjust(results$boot.pvalues, method = 'BH')
sig = results[results$p < CUT,]
sig$zero = 0
points(sig$zero~sig$cM)
return(results)
}
get.boot = function(lgs, dat, chrom.ds, grab.size, overlap.portion, boot.dat){
means = c()
positions = c()
boot.pvalues = c()
for (lg in lgs){
lg.sub = dat[dat$lg == lg,]
windows = seq(1, nrow(lg.sub), by = grab.size*overlap.portion)
for (w in 1 : (length(windows) - 1)){
left = windows[w]
right = windows[(w+1)]
win.sub = lg.sub[left:right,]
mn = mean(abs(win.sub[,chrom.ds]))
boot.p = length(boot.dat[boot.dat >= mn]) / length(boot.dat) + 1/length(boot.dat)
means = append(means, mn)
positions = append(positions, median(win.sub$cM))
boot.pvalues = append(boot.pvalues, boot.p)
}
}
results = data.frame(means, positions, boot.pvalues)
colnames(results) = c(chrom.ds, 'cM', 'boot.pvalues')
results$p = p.adjust(results$boot.pvalues, method = 'BH')
sig = results[results$p < CUT,]
sig$zero = 0
points(sig$zero~sig$cM, pch = 19, col = 'red')
return(results)
}
x = get.boot(lgs, ca.a.poly, 'AC1dp', 30, 1/2, ac.Ac1.boot)
plot.chroms(ac.c.poly, 'CC1dp', 'CC2dp', YLIM, 'AC paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.c.poly, 'CC1dp', 30, 1/3, ac.Cc1.boot)
get.boot = function(lgs, dat, chrom.ds, grab.size, overlap.portion, boot.dat){
means = c()
positions = c()
boot.pvalues = c()
for (lg in lgs){
lg.sub = dat[dat$lg == lg,]
windows = seq(1, nrow(lg.sub), by = grab.size*overlap.portion)
for (w in 1 : (length(windows) - 1)){
left = windows[w]
right = windows[(w+1)]
win.sub = lg.sub[left:right,]
mn = mean(abs(win.sub[,chrom.ds]))
boot.p = length(boot.dat[boot.dat >= mn]) / length(boot.dat) + 1/length(boot.dat)
means = append(means, mn)
positions = append(positions, median(win.sub$cM))
boot.pvalues = append(boot.pvalues, boot.p)
}
}
results = data.frame(means, positions, boot.pvalues)
colnames(results) = c(chrom.ds, 'cM', 'boot.pvalues')
results$p = p.adjust(results$boot.pvalues, method = 'BH')
sig = results[results$p < CUT,]
sig$zero = 0
points(sig$zero~sig$cM, pch = 15, col = 'red')
return(results)
}
plot.chroms(ac.c.poly, 'CC1dp', 'CC2dp', YLIM, 'AC paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.c.poly, 'CC1dp', 30, 1/3, ac.Cc1.boot)
plot.chroms(ca.a.poly, 'AC1dp', 'AC2dp', YLIM, 'CA paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.a.poly, 'AC1dp', 30, 1/2, ac.Ac1.boot)
plot.chroms(ac.control.poly, 'AC1dp', 'AC2dp', YLIM, 'AC control', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.control.poly, 'AC1dp', 30, fraction, con.Ac1.boot)
plot.chroms(ca.control.poly, 'CA1dp', 'CA2dp', YLIM, 'CA control', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.control.poly, 'CA1dp', 30, fraction, con.Cc1.boot)
5
fraction = 1/5
plot.chroms(ac.control.poly, 'AC1dp', 'AC2dp', YLIM, 'AC control', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.control.poly, 'AC1dp', 30, fraction, con.Ac1.boot)
plot.chroms(ca.control.poly, 'CA1dp', 'CA2dp', YLIM, 'CA control', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.control.poly, 'CA1dp', 30, fraction, con.Cc1.boot)
plot.chroms(ac.c.poly, 'CC1dp', 'CC2dp', YLIM, 'AC paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.c.poly, 'CC1dp', 30, fraction, ac.Cc1.boot)
plot.chroms(ca.a.poly, 'AC1dp', 'AC2dp', YLIM, 'CA paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.a.poly, 'AC1dp', 30, fraction, ac.Ac1.boot)
head(ac.a.poly)
ca.Ac1.boot = bootstrap.chroms(ITER, 30, ca.a.poly, 'AC1dp')
ca.Cc1.boot = bootstrap.chroms(ITER, 30, ca.c.poly, 'CC1dp')
head(ca.c.poly)
con.Ac1.boot = bootstrap.chroms(ITER, 30, ac.c.poly, 'AC1dp') ###build the bootstrap off of heat vs control
con.Cc1.boot = bootstrap.chroms(ITER, 30, ca.c.poly, 'CC1dp')
#controls
plot.chroms(ac.control.poly, 'AC1dp', 'AC2dp', YLIM, 'AC control', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.control.poly, 'AC1dp', 30, fraction, con.Ac1.boot)
plot.chroms(ca.control.poly, 'CA1dp', 'CA2dp', YLIM, 'CA control', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.control.poly, 'CA1dp', 30, fraction, con.Cc1.boot)
con.Ac1.boot = bootstrap.chroms(ITER, 30, ac.control.poly, 'AC1dp')
con.Cc1.boot = bootstrap.chroms(ITER, 30, ca.control.poly, 'CC1dp')
con.Cc1.boot = bootstrap.chroms(ITER, 30, ca.control.poly, 'CC1dp')
head(ca.control.poly)
con.Cc1.boot = bootstrap.chroms(ITER, 30, ca.control.poly, 'CA1dp')
#controls
plot.chroms(ac.control.poly, 'AC1dp', 'AC2dp', YLIM, 'AC control', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.control.poly, 'AC1dp', 30, fraction, con.Ac1.boot)
plot.chroms(ca.control.poly, 'CA1dp', 'CA2dp', YLIM, 'CA control', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.control.poly, 'CA1dp', 30, fraction, con.Cc1.boot)
#run
plot.chroms(ac.c.poly, 'CC1dp', 'CC2dp', YLIM, 'AC paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.c.poly, 'CC1dp', 30, fraction, ac.Cc1.boot)
plot.chroms(ca.a.poly, 'AC1dp', 'AC2dp', YLIM, 'CA paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.a.poly, 'AC1dp', 30, fraction, ac.Ac1.boot)
plot.chroms(ac.c.poly, 'CC1dp', 'CC2dp', YLIM, 'AC paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.c.poly, 'CC1dp', 30, fraction, ac.Cc1.boot)
plot.chroms(ca.a.poly, 'AC1dp', 'AC2dp', YLIM, 'CA paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.a.poly, 'AC1dp', 30, fraction, ac.Ac1.boot)
ITER = 10^5
ac.Ac1.boot = bootstrap.chroms(ITER, 30, ac.a.poly, 'AC1dp')
ac.Ac2.boot = bootstrap.chroms(ITER, 30, ac.a.poly, 'AC2dp')
ac.Cc1.boot = bootstrap.chroms(ITER, 30, ac.c.poly, 'CC1dp')
ac.Cc2.boot = bootstrap.chroms(ITER, 30, ac.c.poly, 'CC2dp')
ca.Ac1.boot = bootstrap.chroms(ITER, 30, ca.a.poly, 'AC1dp')
ca.Cc1.boot = bootstrap.chroms(ITER, 30, ca.c.poly, 'CC1dp')
con.Ac1.boot = bootstrap.chroms(ITER, 30, ac.control.poly, 'AC1dp')
con.Cc1.boot = bootstrap.chroms(ITER, 30, ca.control.poly, 'CA1dp')
hist(ac.Ac1.boot)
#run
plot.chroms(ac.c.poly, 'CC1dp', 'CC2dp', YLIM, 'AC paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.c.poly, 'CC1dp', 30, fraction, ac.Cc1.boot)
plot.chroms(ca.a.poly, 'AC1dp', 'AC2dp', YLIM, 'CA paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.a.poly, 'AC1dp', 30, fraction, ac.Ac1.boot)
plot.chroms(ac.c.poly, 'CC1dp', 'CC2dp', YLIM, 'AC paternal', "Linkage Group", YLAB, COLORS, CUT)
#run
plot.chroms(ac.c.poly, 'CC1dp', 'CC2dp', YLIM, 'AC paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.c.poly, 'CC1dp', 30, fraction, ac.Cc1.boot)
plot.chroms(ca.a.poly, 'AC1dp', 'AC2dp', YLIM, 'CA paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.a.poly, 'AC1dp', 30, fraction, ac.Ac1.boot)
#controls
plot.chroms(ac.control.poly, 'AC1dp', 'AC2dp', YLIM, 'AC control', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.control.poly, 'AC1dp', 30, fraction, con.Ac1.boot)
plot.chroms(ca.control.poly, 'CA1dp', 'CA2dp', YLIM, 'CA control', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.control.poly, 'CA1dp', 30, fraction, con.Cc1.boot)
head(CA.control.dat)
CUT
CUT2 = 0.01
get.boot = function(lgs, dat, chrom.ds, grab.size, overlap.portion, boot.dat){
means = c()
positions = c()
boot.pvalues = c()
for (lg in lgs){
lg.sub = dat[dat$lg == lg,]
windows = seq(1, nrow(lg.sub), by = grab.size*overlap.portion)
for (w in 1 : (length(windows) - 1)){
left = windows[w]
right = windows[(w+1)]
win.sub = lg.sub[left:right,]
mn = mean(abs(win.sub[,chrom.ds]))
boot.p = length(boot.dat[boot.dat >= mn]) / length(boot.dat) + 1/length(boot.dat)
means = append(means, mn)
positions = append(positions, median(win.sub$cM))
boot.pvalues = append(boot.pvalues, boot.p)
}
}
results = data.frame(means, positions, boot.pvalues)
colnames(results) = c(chrom.ds, 'cM', 'boot.pvalues')
results$p = p.adjust(results$boot.pvalues, method = 'BH')
sig = results[results$p < CUT,]
sig$zero = 0
points(sig$zero~sig$cM, pch = 15, col = 'red')
sig = results[results$p < CUT2,]
sig$zero = 0
points(sig$zero~sig$cM, pch = 15, col = 'purple')
return(results)
}
#run
plot.chroms(ac.c.poly, 'CC1dp', 'CC2dp', YLIM, 'AC paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.c.poly, 'CC1dp', 30, fraction, ac.Cc1.boot)
plot.chroms(ca.a.poly, 'AC1dp', 'AC2dp', YLIM, 'CA paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.a.poly, 'AC1dp', 30, fraction, ac.Ac1.boot)
#controls
plot.chroms(ac.control.poly, 'AC1dp', 'AC2dp', YLIM, 'AC control', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.control.poly, 'AC1dp', 30, fraction, con.Ac1.boot)
plot.chroms(ca.control.poly, 'CA1dp', 'CA2dp', YLIM, 'CA control', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.control.poly, 'CA1dp', 30, fraction, con.Cc1.boot)
fraction = 1/10
#run
plot.chroms(ac.c.poly, 'CC1dp', 'CC2dp', YLIM, 'AC paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.c.poly, 'CC1dp', 30, fraction, ac.Cc1.boot)
plot.chroms(ca.a.poly, 'AC1dp', 'AC2dp', YLIM, 'CA paternal', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.a.poly, 'AC1dp', 30, fraction, ac.Ac1.boot)
#controls
plot.chroms(ac.control.poly, 'AC1dp', 'AC2dp', YLIM, 'AC control', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ac.control.poly, 'AC1dp', 30, fraction, con.Ac1.boot)
plot.chroms(ca.control.poly, 'CA1dp', 'CA2dp', YLIM, 'CA control', "Linkage Group", YLAB, COLORS, CUT)
x = get.boot(lgs, ca.control.poly, 'CA1dp', 30, fraction, con.Cc1.boot)
